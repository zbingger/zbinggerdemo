<?php

namespace backend\models;

use Yii;

/**
 * This is the model class for table "employee".
 *
 * @property integer $id
 * @property integer $parent_id
 * @property integer $uid
 * @property integer $merchant_id
 * @property string $workno
 * @property string $mobile
 * @property string $realname
 * @property string $password
 * @property string $role
 * @property string $mark
 *
 *
 * @property Merchant $merchant
 */
class Employee extends \yii\db\ActiveRecord
{
    public $confirmPassword;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'employee';
    }

    public function scenarios()
    {
        $scenarios = parent::scenarios(); // TODO: Change the autogenerated stub
        $scenarios['add'] = ['merchant_id', 'workno', 'mobile', 'realname', 'password', 'confirmPassword', 'mark'];
        return $scenarios;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['parent_id', 'uid', 'merchant_id', 'workno', 'mobile', 'realname', 'password', 'confirmPassword', 'mark'], 'required'],
            [['parent_id', 'uid', 'merchant_id'], 'integer'],
            [['mobile'], 'match', 'pattern' => '/^[1][34578][0-9]{9}$/'],
            ['confirmPassword', 'compare', 'compareAttribute' => 'password', 'operator' => '===', 'on' => 'add'],
            [['password', 'confirmPassword'], 'string', 'min' => 4],
            [['workno', 'realname', 'password'], 'string', 'max' => 250],
            [['mobile'], 'string', 'max' => 13],
            [['role'], 'string', 'max' => 1],
            [['mark'], 'string', 'max' => 300],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => '主键自增（1，1）',
            'parent_uid' => '所属商户',
            'uid' => 'Uid',
            'merchant_id' => '所属门店',
            'workno' => '工号',
            'mobile' => '手机号',
            'realname' => '姓名',
            'confirmPassword' => '确认密码',
            'password' => '密码',
            'role' => '角色',//类型1普通店员 2站长默认1
            'mark' => '备注',
        ];
    }

    public  function getMerchant()
    {
        return $this->hasOne(Merchant::className(), ['id' => 'merchant_id']);
    }

    /**
     * @inheritdoc
     * @return EmployeeQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new EmployeeQuery(get_called_class());
    }
}
